WITH jore3_route AS (
    -- This route geometry data is copyright Â© by 2021 Helsingin seudun liikenne (HSL) and licensed under a Creative Commons Attribution 4.0 International License (https://creativecommons.org/licenses/by/4.0/).
    SELECT ST_GeomFromEWKT('SRID=4326;LINESTRING(25.031500731 60.194798667,25.031316548 60.194674433,25.031077169 60.194514724,25.03078372 60.194355435,25.030617003 60.194213112,25.030505766 60.194115239,25.030505203 60.194097291,25.03048493 60.19402564,25.030518165 60.193935621,25.030588292 60.193872243,25.030677004 60.193826673,25.030766279 60.193799051,25.030820069 60.193789657,25.03108958 60.193760634,25.031612267 60.19375657,25.032242251 60.193724741,25.032746068 60.193693891,25.033986878 60.193594463,25.035006031 60.193326208,25.035954488 60.193103377,25.036795075 60.192890358,25.038852432 60.192389551,25.039460388 60.192232194,25.039846391 60.191897051,25.03989677 60.191779967,25.039929126 60.191663023,25.03984597 60.191313606,25.039819151 60.191035556,25.039829796 60.190802094,25.039859031 60.190586437,25.039960068 60.190361242,25.040250259 60.189847327,25.041139083 60.18831441,25.041482447 60.187773146,25.041883839 60.187357091,25.04241136 60.186940043,25.042765499 60.186739784,25.043102467 60.186566588,25.045058116 60.185716411,25.045449119 60.185542783,25.046298623 60.185051372,25.046670165 60.184833012,25.047076026 60.184560524,25.047269659 60.184415377,25.047603437 60.184143456,25.047918619 60.183853729,25.048180028 60.183573403,25.04840654 60.183329256,25.048615031 60.183085252,25.04921789 60.182209796,25.049405203 60.18186722,25.049608524 60.181461684,25.049925356 60.180660298,25.050212699 60.179500098,25.050310481 60.179176182,25.050387381 60.178762669,25.05035988 60.177901175,25.050306664 60.177363027,25.050164809 60.176870461,25.049987218 60.176387155,25.049614037 60.175420684,25.048984135 60.175443621,25.04761539 60.175463418,25.047182493 60.175448885,25.04617145 60.175385057,25.0459916 60.175395452,25.045810324 60.175360977,25.045610749 60.17531767,25.045647062 60.17532636,25.045285651 60.175293305,25.044797292 60.17523432,25.0437125 60.175117197,25.04338712 60.175083853,25.042844443 60.175016313,25.042193404 60.174940647,25.041361668 60.174848444,25.040330656 60.174721895,25.03944489 60.174630104,25.038377583 60.174494848,25.037364323 60.17435916,25.036402002 60.17412433,25.035982055 60.173948088,25.035542688 60.173727117,25.035376904 60.173611722,25.03480525 60.173194305,25.034679727 60.173213237,25.034571089 60.173196133,25.034497911 60.173160799,25.034460758 60.173125184,25.034459065 60.173071341,25.034511128 60.173008101,25.034582613 60.172989591,25.034176755 60.172687568,25.032876489 60.172015517,25.032601808 60.171874038,25.032476852 60.171910916,25.0323685 60.171902783,25.032222436 60.171841087,25.032184443 60.17177855,25.032236789 60.171724286,25.031636499 60.171540459,25.031454696 60.171488016,25.031254883 60.171435714,25.031054789 60.171374437,25.030762952 60.171260016,25.030561736 60.171162843,25.03043341 60.171092031,25.030341106 60.171020939,25.030119354 60.170843139,25.029897042 60.170647391,25.029711036 60.170460337,25.029505899 60.170237526,25.029116449 60.169881504,25.028782721 60.169578905,25.028487824 60.169365766,25.028286907 60.169277563,25.028086551 60.169207307,25.027796145 60.16913775,25.027072656 60.169044619,25.02620509 60.168952599,25.025644259 60.168876154,25.025481889 60.168868433,25.022552822 60.168523035,25.022030534 60.168527062,25.021207367 60.168703952,25.021225656 60.168712787,25.020170295 60.168954291)') AS geom
),
match_params AS (
    SELECT
        -- Digiroad stops on both ends of Jore3 route are searched within this given radius (in meters).
        20 AS route_endpoint_search_radius,
        -- The radius (in meters) used to expand Jore3 route to filter applicable Digiroad links.
        20 AS route_expand_radius
),
jore3_route_3067 AS (
    SELECT ST_Transform(geom, 3067) AS geom FROM jore3_route
),
route_endpoints AS (
    SELECT 'start' AS endpoint_type, ST_StartPoint(geom) AS geom FROM jore3_route_3067
    UNION
    SELECT 'end', ST_EndPoint(geom) FROM jore3_route_3067
),
route_terminal_info AS (
    -- Find terminal links on both route endpoints by first resolving closest Digiroad stop and then get links.
    SELECT
        rep.endpoint_type,
        closest_stop.public_transport_stop_id,
        closest_stop.dist,
        l.infrastructure_link_id
    FROM route_endpoints rep, match_params p
    CROSS JOIN LATERAL (
        SELECT s.public_transport_stop_id, rep.geom <-> s.geom AS dist
        FROM routing.public_transport_stop s
        WHERE ST_DWithin(rep.geom, s.geom, p.route_endpoint_search_radius)
        ORDER BY dist
        LIMIT 1
    ) AS closest_stop
    INNER JOIN routing.public_transport_stop s USING (public_transport_stop_id)
    INNER JOIN routing.infrastructure_link l ON l.infrastructure_link_id = s.located_on_infrastructure_link_id
),
edge_query AS (
    -- Construct edge query for pgr_dijkstra function.
    SELECT query.txt
    FROM (
        SELECT array_to_string(array_agg(infrastructure_link_id), ',') AS txt
        FROM route_terminal_info
    ) terminal_link_ids, match_params p
    CROSS JOIN LATERAL (
        -- Filtering edges in WHERE clause.
        SELECT 'SELECT infrastructure_link_id AS id, start_node_id AS source, end_node_id AS target, cost, reverse_cost'
            || ' FROM routing.infrastructure_link'
            || ' WHERE infrastructure_link_id IN (' || terminal_link_ids.txt || ')'
            || ' OR ST_Contains(ST_Buffer(ST_Transform(ST_GeomFromEWKT(''' || ST_AsEWKT(geom) || '''), 3067), ' || p.route_expand_radius || '), geom)' AS txt
        FROM jore3_route
    ) query
),
shortest_path_alternatives AS (
    SELECT paths.*
    FROM edge_query query
    CROSS JOIN (
        -- Produce 2 start points for both endpoints of the first link.
        SELECT start_node_id AS node_id
        FROM route_terminal_info rti
        INNER JOIN routing.infrastructure_link l USING (infrastructure_link_id)
        WHERE rti.endpoint_type = 'start'
        UNION
        SELECT end_node_id
        FROM route_terminal_info rti
        INNER JOIN routing.infrastructure_link l USING (infrastructure_link_id)
        WHERE rti.endpoint_type = 'start'
    ) AS start_nodes
    CROSS JOIN (
        -- Produce 2 end points for both endpoints of the last link.
        SELECT start_node_id AS node_id
        FROM route_terminal_info rti
        INNER JOIN routing.infrastructure_link l USING (infrastructure_link_id)
        WHERE rti.endpoint_type = 'end'
        UNION
        SELECT end_node_id
        FROM route_terminal_info rti
        INNER JOIN routing.infrastructure_link l USING (infrastructure_link_id)
        WHERE rti.endpoint_type = 'end'
    ) AS end_nodes
    CROSS JOIN LATERAL (
        -- Produce 4 path alternatives by 4 permutations on 2 different endpoints on both ends of the route.
        SELECT
            start_nodes.node_id AS start_node_id,
            end_nodes.node_id AS end_node_id,
            seq,
            path_seq,
            node,
            edge,
            pt.cost,
            agg_cost,
            ST_AsText(geom) AS geom
        FROM pgr_dijkstra(
            query.txt,
            start_nodes.node_id,
            end_nodes.node_id,
            TRUE -- directed
        ) AS pt
        INNER JOIN routing.infrastructure_link link ON pt.edge = link.infrastructure_link_id
    ) AS paths
),
shortest_path_link_counts AS (
    SELECT start_node_id, end_node_id, count(seq) AS link_count
    FROM shortest_path_alternatives
    GROUP BY start_node_id, end_node_id
),
shortest_path_result AS (
    -- Select the longest path alternative.
    SELECT spa.seq, spa.path_seq, spa.node, spa.edge, spa.cost, spa.agg_cost, spa.geom
    FROM (
        SELECT start_node_id, end_node_id
        FROM shortest_path_link_counts
        ORDER BY link_count DESC
        LIMIT 1
    ) t
    INNER JOIN shortest_path_alternatives spa ON spa.start_node_id = t.start_node_id AND spa.end_node_id = t.end_node_id
    ORDER BY seq
),
compound_line AS (
    SELECT ST_LineMerge(ST_Collect(ST_SetSRID(geom, 3067))) AS geom
    FROM shortest_path_result
)
-- SELECT * FROM route_terminal_info;
-- SELECT * FROM edge_query;
-- SELECT * FROM shortest_path_result;
SELECT ST_AsGeoJSON(ST_Transform(geom, 4326)) AS geojson FROM compound_line;

-- GeoJSON result:
--  {"type":"LineString","coordinates":[[25.018461866,60.169269751],[25.018653201,60.169272613],[25.019029146,60.169242729],[25.019429984,60.169168837],[25.019882173,60.169055753],[25.020320747,60.168946909],[25.020768481,60.168833763],[25.021166596,60.168730968],[25.021275526,60.168697081],[25.021439683,60.168648561],[25.021699372,60.168600093],[25.021982207,60.16855488],[25.022204998,60.168537853],[25.022421237,60.168532359],[25.022624951,60.16854122],[25.022901968,60.168571194],[25.023585765,60.168643495],[25.024916064,60.168801462],[25.025530801,60.168868871],[25.026365813,60.16896785],[25.026552681,60.168990761],[25.027469048,60.169096658],[25.027858117,60.169150771],[25.028179373,60.169233154],[25.028380236,60.169313745],[25.02858499,60.169428075],[25.028753605,60.169556508],[25.028863698,60.169656253],[25.029085788,60.16987333],[25.029461735,60.170220092],[25.029705694,60.170458313],[25.029730906,60.170481609],[25.029842012,60.170587404],[25.030015691,60.170752771],[25.030396202,60.171044423],[25.030806083,60.171271681],[25.031316311,60.171441957],[25.031753858,60.171574291],[25.03204742,60.171663034],[25.032191576,60.171709859],[25.03229643,60.171747397],[25.032430386,60.171797779],[25.032650538,60.171906529],[25.033015482,60.172093126],[25.033314861,60.172251453],[25.033734218,60.172464911],[25.034033974,60.172617027],[25.03423672,60.172725516],[25.034402276,60.172830964],[25.034518419,60.172929483],[25.034585721,60.173012376],[25.034667548,60.1731017],[25.034862848,60.173272123],[25.034996562,60.173389512],[25.035273318,60.173593404],[25.035616021,60.173798274],[25.036066964,60.174004756],[25.036485036,60.174157379],[25.036987361,60.174296367],[25.037494082,60.174403138],[25.03795416,60.17447073],[25.038151277,60.174493543],[25.038149262,60.174527024],[25.038159625,60.174559116],[25.038224847,60.174596386],[25.038300813,60.174617369],[25.038432702,60.174619321],[25.038513446,60.174601906],[25.038572022,60.174580436],[25.038619555,60.174535225],[25.038803343,60.174544241],[25.039327558,60.174614475],[25.040186606,60.174710425],[25.040860363,60.174788433],[25.041061427,60.174811021],[25.04135542,60.174844063],[25.042001942,60.174919642],[25.042832318,60.175016237],[25.043516728,60.175096005],[25.043805182,60.175126472],[25.044243751,60.175172618],[25.044842303,60.175236175],[25.045619054,60.175320106],[25.04595301,60.175363427],[25.046379097,60.175408564],[25.046779507,60.175439193],[25.047297087,60.175455605],[25.047866259,60.175451174],[25.048080465,60.175483034],[25.049211024,60.175463486],[25.049553943,60.175456399],[25.049643909,60.175633944],[25.049806997,60.176022887],[25.04995864,60.176409389],[25.050102415,60.176816461],[25.050205871,60.177151866],[25.05028304,60.177506457],[25.050320247,60.177829562],[25.050336386,60.178125125],[25.050328987,60.178322918],[25.050296585,60.178884018],[25.050203602,60.179511311],[25.050187719,60.17956874],[25.05005946,60.180100902],[25.049989354,60.180418018],[25.049856672,60.180734878],[25.049653635,60.181245551],[25.049398295,60.181760806],[25.049223581,60.182091121],[25.048992398,60.182479857],[25.048736546,60.182854523],[25.048484963,60.18318905],[25.048213458,60.18350611],[25.047897856,60.183829516],[25.047609263,60.184077003],[25.047474657,60.184191198],[25.047163685,60.184455554],[25.046731738,60.184762343],[25.046259029,60.185059369],[25.045694579,60.185355005],[25.045256254,60.185569059],[25.044780633,60.185773903],[25.043482964,60.18632226],[25.042944688,60.18658794],[25.042475085,60.186852054],[25.042097847,60.187113839],[25.041749475,60.187397794],[25.041529124,60.187605904],[25.041405239,60.187754175],[25.041337245,60.187835874],[25.041335926,60.187837435],[25.041094867,60.188192582],[25.041013399,60.188303038],[25.040736061,60.188800412],[25.040166898,60.189839888],[25.040164815,60.189850618],[25.040059642,60.190039357],[25.039868662,60.190404467],[25.039785958,60.190631953],[25.039751775,60.190950745],[25.03977628,60.191202513],[25.039806793,60.19147272],[25.039819322,60.19172387],[25.039739842,60.19188423],[25.039663003,60.191974294],[25.039575676,60.1920427],[25.039573842,60.192043805],[25.039357513,60.192153199],[25.039346535,60.192157303],[25.039106473,60.192219112],[25.039054373,60.192230386],[25.038992572,60.192244327],[25.038921609,60.192260343],[25.038742771,60.192303665],[25.037992803,60.192485906],[25.037087251,60.192712715],[25.035941684,60.192998035],[25.03574345,60.19305064],[25.034004872,60.193511288],[25.033784747,60.193579931],[25.03343495,60.193666149],[25.033151197,60.193703767],[25.032783059,60.193734096],[25.031775682,60.19375296],[25.031415531,60.193760447],[25.031096472,60.193767358],[25.031001691,60.193773414],[25.030899627,60.193785721],[25.030788432,60.193823068],[25.030558284,60.193921249],[25.030499659,60.194027458],[25.030503134,60.194083555],[25.030512365,60.194142334],[25.030841378,60.194294817],[25.030921433,60.194443926],[25.032204804,60.195274287]]}
